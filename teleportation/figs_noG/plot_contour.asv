clear all;
close all;


data_py = load('data-py-sig10');
data_as = load('data-as-sig10');

tmsv = zeros(30, 30);
sb = zeros(30, 30);
for i = 1:30
    for j = 1:30
        tmsv(i,j) = data_py.data(1,i,j);
        sb(i,j) = data_py.data(2,i,j);
    end
end


as = data_as.results;


ts = linspace(0.0001, 1, 30);
es = logspace(-2.2, -0.9, 30);



mask = as > sb;

top = sb;
top(mask) = as(mask);

color_mask = zeros(30, 30);
color_mask(mask) = 1;
color_mask(~mask) =  0;
color_mask(as < 0.5) = -1;

figure; hAxes = gca;
hold on

[C,h] = contour(ts, es, top, 'LevelList', [0.5, 0.55 0.6, 0.65, 0.7, 0.], 'EdgeColor', 'k');   
% clabel(C,h)
contP = get(h,'Parent') 

set(findobj(gca,'Type','patch','UserData',2),'EdgeColor',[0 0 0])

X = contP.XLim 
Y = contP.YLim

% ax1.Visible = 'off';
colormap('hot')

img = imagesc(color_mask,'XData',X,'YData',Y);
colormap( hAxes , [1 0 0; 0 0 1 ;0 1 0] )
img.AlphaData = 0.2;


% [C,h] = contour(ts, es, top);   
clabel(C,h);
% set(findobj(gca,'Type','patch','UserData',2),'EdgeColor',[0 0 0]);

% 
% 
% % set(mask,'linewidth',0);
% % alpha(ax1, 0);
% view(2);
% ax2 = axes;
% contourf(ts,es,as);
% alpha(ax2, 0.2);
% alpha(0.5)
% 
% 
% %%Link them together
% linkaxes([ax1,ax2]);
% %%Hide the top axes
% ax2.Visible = 'off';
% ax2.XTick = [];
% ax2.YTick = [];
% %%Give each one its own colormap
% colormap(ax1,'hot')
% colormap(ax2,'cool')
% %%Then add colorbars and get everything lined up
% set([ax1,ax2],'Position',[.17 .11 .685 .815]);
% cb1 = colorbar(ax1,'Position',[.05 .11 .0675 .815]);
% cb2 = colorbar(ax2,'Position',[.88 .11 .0675 .815]);