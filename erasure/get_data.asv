clc;clear

OptOption = optimoptions(@fmincon, 'FunctionTolerance', 1e-30,'StepTolerance', 1e-20, 'Display','off');

% 'algorithm','sqp'
me = (0.0086-.0033)/100;





F_1 = zeros(1, tnum);
F_2 = F_1;
F_3 = F_1;
F_12 = F_1;
F_13 = F_1;
F_23 = F_1;


sig = 10;

gmax = 10;
gmin = 1;
gini = 1.1;

% gmax = 1;
% gmin = 1;
% gini = 1;

Tmax = 0.999;
Tmin = 0.001;
Tini = 0.99;


Vmax = 100;
Vmin = 1;
Vini = 1.5;




fun_1 = @(par) -fid_tmsv(par(1), par(2), par(3), '1', sigma);
fun_2 = @(par) -fid_tmsv(par(1), par(2), par(3), '2', sigma);
fun_3 = @(par) -fid_tmsv(par(1), par(2), par(3), '3', sigma);
fun_12 = @(par) -fid_tmsv(par(1), par(2), par(3), '12', sigma);
fun_13 = @(par) -fid_tmsv(par(1), par(2), par(3), '13', sigma);
fun_23 = @(par) -fid_tmsv(par(1), par(2), par(3), '23', sigma);


[~, F_1] = fmincon(fun_ep, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
[~, F_2] = fmincon(fun_ps, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
[~, F_3] = fmincon(fun_pa, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
[~, F_12] = fmincon(fun_pc, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
[~, F_13] = fmincon(fun_as, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
[~, F_23] = fmincon(fun_sa, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);


for i = 6:tnum
    disp([i]);
    
    % Fixed
    t = ts(i);
    e = 0.05;


    % Fiber
%     t = 10^(-tdB(i)/10);
%     L = Ls(i);
%     t = 10^(-(0.16 * L)/10);
%     e = me * L + 0.0006;

    % Sat
%     t = ts(i);
%     e = t * 0.0186 + 0.0133/0.95;


    fun_ep = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'epr', par(3), eta, sig);
    fun_ps = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'ps', par(3), eta, sig);
    fun_pa = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'pa', par(3), eta, sig);
    fun_pc = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'pc', par(3), eta, sig);
    fun_as = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'as', par(3), eta, sig);
    fun_sa = @(par) -coh_loss_eta_mean(par(1), par(2), t, e, 'sa', par(3), eta, sig);
    
    
%     fun_ep = @(par) -sq_loss_eta(par(1), par(2), t, e, 'epr', par(3), eta, sig);
%     fun_ps = @(par) -sq_loss_eta(par(1), par(2), t, e, 'ps', par(3), eta, sig);
%     fun_pa = @(par) -sq_loss_eta(par(1), par(2), t, e, 'pa', par(3), eta, sig);
%     fun_pc = @(par) -sq_loss_eta(par(1), par(2), t, e, 'pc', par(3), eta, sig);
%     fun_as = @(par) -sq_loss_eta(par(1), par(2), t, e, 'as', par(3), eta, sig);
%     fun_sa = @(par) -sq_loss_eta(par(1), par(2), t, e, 'sa', par(3), eta, sig);
    
%     fun_ep = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'epr', par(3), eta, s, sig);
%     fun_ps = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'ps', par(3), eta, s, sig);
%     fun_pa = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'pa', par(3), eta, s, sig);
%     fun_pc = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'pc', par(3), eta, s, sig);
%     fun_as = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'as', par(3), eta, s, sig);
%     fun_sa = @(par) -sq_coh_loss_eta(par(1), par(2), t, e, 'sa', par(3), eta, s, sig);
    
    
    [~, Fepr(i)] = fmincon(fun_ep, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    [~, F_ps(i)] = fmincon(fun_ps, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    [~, F_pa(i)] = fmincon(fun_pa, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    [~, F_pc(i)] = fmincon(fun_pc, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    [~, F_as(i)] = fmincon(fun_as, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    [~, F_sa(i)] = fmincon(fun_sa, [Tini, rini, gini], [],[],[],[], [Tmin, rmin, gmin], [Tmax, rmax, gmax], [], OptOption);
    

end


Fepr = -Fepr;
F_ps = -F_ps;
F_pa = -F_pa;
F_pc = -F_pc;
F_as = -F_as; 
F_sa = -F_sa;

% Fepr
% F_ps
% F_pa
% F_pc
% F_as
% F_sa

results = [Fepr(:), F_ps(:), F_pa(:), F_pc(:), F_as(:), F_sa(:)];
save('sq_results_sig10.mat', 'results');

% results = [F_as(:), F_as1(:), F_as2(:)];

% save('results_sat_sig10.mat', 'results');

